# Transcribed 2023-11-12T20 with OpenAI Whisper large model 
# Proofreading by: <name> 
# Quality check by: <name>

1
0:00:00,000 --> 0:00:09,800
 Well, then I would like to welcome Joachim,

2
0:00:10,040 --> 0:00:15,280
 who is going to give us a talk about a dependently timed drum machine language.

3
0:00:15,460 --> 0:00:18,020
 I've been looking forward to this one very much.

4
0:00:18,400 --> 0:00:19,400
 Please give Joachim a hand.

5
0:00:19,400 --> 0:00:19,480
 Thank you.

6
0:00:19,480 --> 0:00:29,980
 Hi, everybody.

7
0:00:30,860 --> 0:00:37,400
 I'm Joachim, and I'm a musician, but I'm also a computer scientist.

8
0:00:38,540 --> 0:00:42,220
 And sometimes I like to combine the two,

9
0:00:42,220 --> 0:00:47,740
 and a programming language is a fun way to combine things.

10
0:00:49,260 --> 0:00:49,460
 And...

11
0:00:49,460 --> 0:00:51,880
 So that's what we're going to talk about today.

12
0:00:57,060 --> 0:00:59,660
 When you listen to an audio signal,

13
0:01:00,620 --> 0:01:02,940
 for instance, right now you are listening to an audio signal,

14
0:01:03,040 --> 0:01:04,180
 it comes out of the speaker,

15
0:01:05,160 --> 0:01:08,060
 and it's continuous in some sense.

16
0:01:09,540 --> 0:01:13,960
 But that's, of course, not the way you perceive it.

17
0:01:16,460 --> 0:01:19,440
 Likely you are identical,

18
0:01:19,460 --> 0:01:20,480
 and you are identifying some things.

19
0:01:21,060 --> 0:01:22,340
 Maybe you give them a name.

20
0:01:23,360 --> 0:01:27,760
 This guy here on the image has some audio coming into his ear,

21
0:01:27,900 --> 0:01:31,980
 and perhaps he perceives this first blue square as a hand clap.

22
0:01:33,440 --> 0:01:34,040
 Right?

23
0:01:34,180 --> 0:01:35,160
 Or a snare drum.

24
0:01:36,780 --> 0:01:41,300
 And likewise, when I'm producing a signal,

25
0:01:42,640 --> 0:01:48,100
 I am unlikely to think of the continuity of things.

26
0:01:48,100 --> 0:01:52,700
 Rather, I'm saying some words, and they have syllables,

27
0:01:52,700 --> 0:01:58,700
 and I can put them somewhere relative to each other in time.

28
0:01:58,700 --> 0:02:07,700
 There are various ways of describing how to put events relative to each other in time.

29
0:02:07,700 --> 0:02:10,700
 Here is a classic one, sheet music.

30
0:02:10,700 --> 0:02:12,700
 All right.

31
0:02:12,700 --> 0:02:14,700
 The first...

32
0:02:14,700 --> 0:02:17,700
 So let's say that I want to say programming drum patterns.

33
0:02:17,700 --> 0:02:22,700
 It's likely that I will say this during the talk.

34
0:02:22,700 --> 0:02:28,700
 Then I might use these eight notes here.

35
0:02:28,700 --> 0:02:34,700
 They have the same duration relative to each other.

36
0:02:34,700 --> 0:02:39,700
 So the sentence will be programming drum patterns.

37
0:02:39,700 --> 0:02:41,700
 Right?

38
0:02:41,700 --> 0:02:46,700
 But that's not so close to the way I was thinking it.

39
0:02:46,700 --> 0:02:47,400
 So...

40
0:02:47,400 --> 0:02:54,400
 So maybe I'll make the two latter syllables a little bit faster.

41
0:02:54,400 --> 0:02:59,400
 The note here with two bars is a sixteenth note, and it's twice as fast.

42
0:02:59,400 --> 0:03:02,400
 Programming drum patterns.

43
0:03:02,400 --> 0:03:08,400
 It doesn't sound that natural, but it has some effect.

44
0:03:08,400 --> 0:03:14,400
 To fix the amount of time I spend saying my sentence,

45
0:03:14,400 --> 0:03:16,400
 I vary the tempo by...

46
0:03:16,400 --> 0:03:22,400
 By putting a little indication here of how much time is consumed,

47
0:03:22,400 --> 0:03:24,400
 how many quarter notes is consumed per minute.

48
0:03:24,400 --> 0:03:27,400
 That's the beats per minute.

49
0:03:27,400 --> 0:03:32,400
 The latter one here is four against three against three.

50
0:03:32,400 --> 0:03:36,400
 Programming drum patterns.

51
0:03:36,400 --> 0:03:42,400
 Neither is close to what I was trying to do when I said programming drum patterns.

52
0:03:42,400 --> 0:03:44,400
 And it's actually...

53
0:03:44,400 --> 0:03:49,400
 Actually, it's really difficult to get it right with sheet music.

54
0:03:49,400 --> 0:03:55,400
 Nonetheless, drummers do put their rhythms in sheet music.

55
0:03:55,400 --> 0:03:59,400
 And here is an example.

56
0:03:59,400 --> 0:04:04,400
 I have written a program in a programming language called Badumtch

57
0:04:04,400 --> 0:04:11,400
 that I made some time ago.

58
0:04:11,400 --> 0:04:13,400
 And so here is the program.

59
0:04:14,400 --> 0:04:20,400
 The program for the rhythm on the top here is this program.

60
0:04:20,400 --> 0:04:22,400
 So let's hear it.

61
0:04:22,400 --> 0:04:25,400
 First, we'll need to compile it.

62
0:04:25,400 --> 0:04:28,400
 And in this prototype compiler,

63
0:04:28,400 --> 0:04:31,400
 type checking is a little bit slow, but that's alright.

64
0:04:35,400 --> 0:04:40,400
 In the meantime, we can inspect the type signature of the variable Beat.

65
0:04:40,400 --> 0:05:02,400
 As you can see here, the type of beat is 1616, because its duration is 1616th notes.

66
0:05:02,400 --> 0:05:19,400
 Now that we have compiled it, it will run a little bit faster, but I will run it again,

67
0:05:19,400 --> 0:05:23,400
 this time with the audio channel unmuted.

68
0:05:32,400 --> 0:05:57,400
 Alright, something is a little bit overdriven.

69
0:05:57,400 --> 0:06:00,400
 Alright, you got it.

70
0:06:00,400 --> 0:06:01,400
 And...

71
0:06:02,400 --> 0:06:07,400
 So, I mean...

72
0:06:07,400 --> 0:06:12,400
 It's a hip-hop beat, but it's not that hip.

73
0:06:12,400 --> 0:06:16,400
 It's like an 80s hit, alright?

74
0:06:16,400 --> 0:06:22,400
 So, but it's not uncommon to notate it like this nonetheless.

75
0:06:22,400 --> 0:06:27,400
 But a hip-hop musician might transform what he's reading a little bit,

76
0:06:27,400 --> 0:06:32,400
 and a classic transformation is this quintuplet shuffle.

77
0:06:32,400 --> 0:06:37,400
 When I say classic, I mean it was hip in the hip-hop scene some years ago,

78
0:06:37,400 --> 0:06:40,400
 like two years.

79
0:06:40,400 --> 0:06:48,400
 And after applying the transformation, two eight notes like this become...

80
0:06:48,400 --> 0:06:52,400
 Well, think of it like this.

81
0:06:52,400 --> 0:07:00,400
 You have two events that happen in time, and they are kind of a family.

82
0:07:00,400 --> 0:07:10,400
 The family of two rhythms is the family of things that happen with two durations relative to each other.

83
0:07:10,400 --> 0:07:19,400
 After this transformation, the first note is three-fifths, and the latter is only two-fifths.

84
0:07:19,400 --> 0:07:27,400
 And for the sake of readability, I have overbarred the quintuplet like this.

85
0:07:27,400 --> 0:07:28,400
 I hope you can read it.

86
0:07:28,400 --> 0:07:29,400
 Let's do it again.

87
0:07:29,400 --> 0:07:33,400
 Let's do it in bottom two.

88
0:07:33,400 --> 0:07:38,400
 So, what we're doing is we're adding a phrasing here,

89
0:07:38,400 --> 0:07:47,400
 and the first note is a three against two.

90
0:07:47,400 --> 0:07:56,400
 And I denote it by putting a list here with a three and a two.

91
0:07:56,400 --> 0:07:58,400
 We'll just compile the song again.

92
0:07:59,400 --> 0:08:06,400
 While we are compiling, we can inspect the type signature of the variable beat.

93
0:08:06,400 --> 0:08:11,400
 Uh-oh.

94
0:08:11,400 --> 0:08:13,400
 Let's just type check in Emacs again.

95
0:08:13,400 --> 0:08:16,400
 All right.

96
0:08:29,400 --> 0:08:40,400
 Let's do it again.

97
0:08:40,400 --> 0:08:44,400
 All right.

98
0:08:44,400 --> 0:08:49,400
 This is actually already much hipper, so I'll change the comment here and express that I'm happier with this.

99
0:08:49,400 --> 0:08:54,400
 So, I'll change the comment here.

100
0:08:54,400 --> 0:08:55,400
 And express that I'm happier with this.

101
0:08:55,400 --> 0:08:56,400
 I'll change it here.

102
0:08:56,400 --> 0:08:57,400
 I'll change the comment here.

103
0:08:57,400 --> 0:08:58,400
 And express that I'm happier with this.

104
0:08:58,400 --> 0:09:05,400
 happier with it with a smiley here. Alright, the type signature of Beat has become 8080

105
0:09:06,360 --> 0:09:13,360
 because now it's 8080th notes and we'll come back to why it changed its type like that.

106
0:09:15,860 --> 0:09:22,860
 Alright, for some time we've been developing a couple of tools for inputting rhythms into

107
0:09:22,860 --> 0:09:29,860
 computers like this and I want to put them into three categories. And the first category

108
0:09:33,680 --> 0:09:40,680
 I will call a Grid Editor. On the slide here is an illustration of the Beat plus Baseline

109
0:09:42,520 --> 0:09:49,520
 Grid Editor from Linux Multimedia Studio. There's a similar, maybe it's not called the

110
0:09:51,260 --> 0:09:52,840
 Beat plus Baseline Editor.

111
0:09:52,840 --> 0:09:59,840
 But it's the same thing in Cubase and Pro Tools and Ableton Live also has a drum machine

112
0:09:59,840 --> 0:10:06,840
 like this. And the way the program is structured is that it has three sequences, one for each

113
0:10:08,780 --> 0:10:15,780
 signal. The lowermost signal here is a bass drum, then there's a snare drum signal and

114
0:10:17,240 --> 0:10:22,240
 a hi-hat signal. And to input this rhythm here, you have to input a bass drum and then

115
0:10:22,840 --> 0:10:38,780
 an hi-hat. Remember when I said you can't play a bass drum tr Lucid looks clever, who

116
0:10:38,780 --> 0:10:44,780
 can't play an eight note rhythm. Obviously you can play an eight note rhythm but you

117
0:10:44,880 --> 0:10:52,300
 have to play a five note rhythm. It's like period

118
0:10:52,300 --> 0:10:52,700
 rhythm, we have this actual cd tempo section. Right?

119
0:10:52,700 --> 0:10:59,860
 And to do so, I'll need to have a finer grid.

120
0:10:59,860 --> 0:11:12,200
 And because the least common multiple of 5 and 8 is 40, I'll need a 40-grid, all right?

121
0:11:12,200 --> 0:11:16,860
 So and we'll come back to that.

122
0:11:16,860 --> 0:11:25,920
 So I need to refine the grid speculatively before I insert my rhythm into the sequencer.

123
0:11:25,920 --> 0:11:31,400
 Another alternative is what I would like to call a signal processing language.

124
0:11:31,400 --> 0:11:37,240
 Languages like Sonic Pi go into this category.

125
0:11:37,240 --> 0:11:42,020
 Here I have denoted the transformed rhythm in a programming language called Chuck, which

126
0:11:42,020 --> 0:11:46,840
 was popular some years ago.

127
0:11:46,840 --> 0:11:57,080
 Each line changes the velocity of the hi-hat channel and calls some procedures that chuck

128
0:11:57,080 --> 0:12:01,760
 in a wave file into the signal.

129
0:12:01,760 --> 0:12:10,220
 I have omitted these procedures in the interest of saving space in the slide.

130
0:12:10,220 --> 0:12:11,460
 All right?

131
0:12:11,460 --> 0:12:16,820
 And then here I have put a comment about where we are in the rhythm.

132
0:12:16,820 --> 0:12:24,340
 It's a little bit, it becomes a little bit messy and transformations on programs like

133
0:12:24,340 --> 0:12:31,540
 this one, let's say that I had my not so hip hip-hop rhythm and I wanted to make a transformed

134
0:12:31,540 --> 0:12:35,660
 quintuplet shuffle rhythm, the transformation is really tedious.

135
0:12:35,660 --> 0:12:41,060
 So it's not really feasible for a working musician to input his drum rhythms like this.

136
0:12:41,060 --> 0:12:44,940
 Nonetheless, it is possible.

137
0:12:44,940 --> 0:12:45,940
 Then there's a third category.

138
0:12:45,940 --> 0:12:46,700
 This is a little bit more complicated.

139
0:12:46,700 --> 0:12:53,240
 I want to call the third category music score representations.

140
0:12:53,240 --> 0:12:56,520
 And here are two examples of such representations.

141
0:12:56,520 --> 0:13:11,040
 The first one here is a very used Haskell embedded DSL for notating music.

142
0:13:11,040 --> 0:13:14,220
 And it has two operators.

143
0:13:14,220 --> 0:13:15,820
 This one here.

144
0:13:15,820 --> 0:13:18,940
 This is the at the same time operator.

145
0:13:18,940 --> 0:13:23,240
 And this one which is the in sequence operator.

146
0:13:23,240 --> 0:13:33,160
 And I have typed in here the hi-hat part of the transformed rhythm and I play it at the

147
0:13:33,160 --> 0:13:43,620
 same time as my transformed snare drum pattern and my transformed bass drum pattern.

148
0:13:43,620 --> 0:13:44,620
 In C sound.

149
0:13:44,620 --> 0:13:45,700
 There's an embedded DSL.

150
0:13:45,700 --> 0:13:47,320
 I was in a cell called DSL.

151
0:13:47,320 --> 0:13:51,520
 Where you have an instrument that takes some patch cables.

152
0:13:51,520 --> 0:13:57,680
 This magic DSL patch cable and some cables that has to be zero and one all the time for

153
0:13:57,680 --> 0:13:59,480
 some purpose.

154
0:13:59,480 --> 0:14:05,620
 And then a patch cable that goes to the thing that outputs the wave signal.

155
0:14:05,620 --> 0:14:07,380
 And then some canonical cables here.

156
0:14:07,380 --> 0:14:09,780
 Attack, sustain, decay, release.

157
0:14:09,780 --> 0:14:12,820
 And then it takes a string.

158
0:14:12,820 --> 0:14:13,820
 Which represents the movement of the drum.

159
0:14:13,820 --> 0:14:14,820
 It takes a string.

160
0:14:14,820 --> 0:14:15,500
 It's a string.

161
0:14:15,500 --> 0:14:22,700
 the events that it has to produce and the first part is the one that defines

162
0:14:22,700 --> 0:14:30,280
 the subdivision and here I have typed in the transformed eight nodes in a 20 grid

163
0:14:30,280 --> 0:14:39,680
 by writing r20 out here to summarize we have three categories of ways to input

164
0:14:39,680 --> 0:14:47,720
 rhythms into computers like this the grid editor has some pros the main pro I think

165
0:14:47,720 --> 0:14:54,500
 is that it gives a good syntactic overview with this grid editor you have an overview

166
0:14:54,500 --> 0:15:01,880
 or the whole bar and you cannot input something that's slightly longer than the bar or combine

167
0:15:01,880 --> 0:15:09,080
 things that will do something unexpected on the other hand you'll have to speculatively select

168
0:15:09,080 --> 0:15:09,660
 a grid like this and you can't input a grid like this and you can't input a grid like this

169
0:15:09,660 --> 0:15:18,240
 and if you select the wrong grid you either have to turn off the grid and draw in your events by

170
0:15:18,240 --> 0:15:26,640
 hand which is very tedious or you have to change the grid and start over and furthermore the ways

171
0:15:26,640 --> 0:15:34,020
 that you specialize the grid in Linux multimedia system and in Cubase and in Ableton live which

172
0:15:34,020 --> 0:15:38,640
 are the one I tried is specialized for contemporary Western music

173
0:15:39,660 --> 0:15:46,080
 meaning that it's much easier to separate a piece of time into two chunks of time that have equal

174
0:15:46,080 --> 0:15:51,840
 duration than it is to separate the grid into chunks of time that have different durations in

175
0:15:51,840 --> 0:15:58,920
 relation to each other and finally oh now we have signal processing signal processors

176
0:16:00,540 --> 0:16:08,040
 in a signal processor you have full control over signals but the way we perceive signals

177
0:16:09,660 --> 0:16:14,500
 gestures are different depending on body the moment which biom blockchain has any part in

178
0:16:14,500 --> 0:16:21,540
 the Fields hey that the signal coming from on the sounds that we want to give names and

179
0:16:21,540 --> 0:16:27,040
 signal processing languages have post structuring mechanisms because it had all of the signal

180
0:16:27,040 --> 0:16:33,900
 processing heavens at a different level of abstraction finally we have the music representation

181
0:16:33,900 --> 0:16:37,380
 sheet representations and they have some pros to my favoriteБ Racing tough but I still enjoy large

182
0:16:37,380 --> 0:16:37,980
 system which in오라анов daar global representation sheet representations and they have some pros – my favorite pro is that it has a concise familiar notation so I'm a musician but I'veCOmefidently just that café music or something like that so if we can't write drastically here you've got to have the sound dropped later

183
0:16:37,980 --> 0:16:39,020
 advice foreign going right away and so Google is out I have the exchange it's not that time prior

184
0:16:39,020 --> 0:16:39,180
 approach and it's good how to do it so you typically do taking this thing however this is no reaction to you

185
0:16:39,660 --> 0:16:46,120
 This QN variable here, which represents a quarter note, is very easy to understand.

186
0:16:46,940 --> 0:16:57,940
 And talking about loudness, these variables here, forte and mezzoforte, are recognizable from the music sheet.

187
0:16:58,360 --> 0:17:01,000
 But the structure of the music sheet is gone.

188
0:17:01,000 --> 0:17:10,760
 And if one of these parts is longer than the other, then the duration of the whole thing is the duration of the longest thing.

189
0:17:10,900 --> 0:17:16,920
 And if you combine them, either you get some audio clipped out or you get a rest somewhere.

190
0:17:17,440 --> 0:17:19,780
 And it's really difficult to hear what the error is.

191
0:17:21,780 --> 0:17:29,980
 It also trades off the syntactic constraints that we had in the sequencer or in the grid editor.

192
0:17:29,980 --> 0:17:30,080
 Okay.

193
0:17:31,000 --> 0:17:36,320
 For this expressive power of expressing rhythms any way we want.

194
0:17:37,240 --> 0:17:41,020
 It also inherits an unfortunate flaw from sheet music.

195
0:17:42,220 --> 0:17:46,220
 That you cannot actually talk about a note by itself.

196
0:17:47,620 --> 0:17:55,280
 So if you input a note into a music sheet, you cannot say a C.

197
0:17:55,540 --> 0:17:57,420
 You have to say C for one quarter note.

198
0:17:57,420 --> 0:18:00,980
 So the duration is embedded into the thing.

199
0:18:01,120 --> 0:18:01,820
 That you're saying.

200
0:18:02,560 --> 0:18:04,840
 And it has to be like that all the time.

201
0:18:05,380 --> 0:18:07,600
 So it's kind of, it's optimized for reading.

202
0:18:08,900 --> 0:18:15,180
 And it's very, that's fine if you want to give this music sheet to a person who has to read it.

203
0:18:15,640 --> 0:18:19,440
 But it gives you some limitations for expressibility.

204
0:18:20,620 --> 0:18:21,060
 All right.

205
0:18:21,200 --> 0:18:25,780
 So I wanted to design a programming language that solved at least some of these issues.

206
0:18:26,920 --> 0:18:30,040
 And I wanted to be a declarative programming language.

207
0:18:31,000 --> 0:18:38,460
 And I want to obtain this kind, the same kind of expressiveness that you get from a music score representation.

208
0:18:39,720 --> 0:18:41,860
 But I also want it to be composable.

209
0:18:42,340 --> 0:18:44,080
 And I want to separate things out.

210
0:18:44,160 --> 0:18:48,000
 So I actually want to talk about the signal separate from the rhythm.

211
0:18:49,240 --> 0:18:57,400
 And finally, I still want to preserve these alignment constraints that you get syntactically from your grid editor.

212
0:18:58,880 --> 0:19:00,640
 The last part here.

213
0:19:01,000 --> 0:19:06,040
 About preserving alignment constraints is where dependent types come in.

214
0:19:06,740 --> 0:19:09,620
 As you might notice from the title of the talk.

215
0:19:09,620 --> 0:19:12,900
 It's a dependently timed programming language.

216
0:19:13,820 --> 0:19:18,000
 And I'll just quickly brush that up.

217
0:19:19,760 --> 0:19:21,940
 What I mean by a dependent type.

218
0:19:22,940 --> 0:19:27,400
 If this is a little bit hard to follow, don't worry.

219
0:19:27,920 --> 0:19:30,620
 But if you plan to attend the workshop.

220
0:19:31,000 --> 0:19:38,360
 The workshop tomorrow and it felt a little bit fast, it's best if you show up at 9.

221
0:19:42,320 --> 0:19:43,760
 In the lambda calculus.

222
0:19:47,760 --> 0:19:48,260
 All right.

223
0:19:48,260 --> 0:19:51,620
 In the lambda calculus, here is a syntax for the lambda calculus.

224
0:19:51,620 --> 0:19:52,120
 All right.

225
0:19:52,120 --> 0:19:57,640
 We can have a variable or we can have an abstraction which is annotated by a type or a term.

226
0:19:57,640 --> 0:19:59,640
 Or we can apply a term to a term.

227
0:19:59,640 --> 0:20:00,140
 Right.

228
0:20:00,140 --> 0:20:00,780
 And it has some types.

229
0:20:00,780 --> 0:20:02,780
 And it has some typing rules.

230
0:20:02,780 --> 0:20:06,780
 So here is the syntax for terms and the syntax for types.

231
0:20:06,780 --> 0:20:08,780
 It has these typing judgments.

232
0:20:08,780 --> 0:20:14,780
 And the abstraction typing judgment is an abstraction from terms over terms.

233
0:20:14,780 --> 0:20:20,780
 And the application rule is applying a term to a term.

234
0:20:20,780 --> 0:20:28,780
 So clearly nothing can depend or abstract over a type in this system.

235
0:20:28,780 --> 0:20:30,120
 One way.

236
0:20:30,120 --> 0:20:38,120
 We could decide to extend it was that we could extend the syntax for types with this type variable.

237
0:20:38,120 --> 0:20:42,120
 And then introduce a new abstraction.

238
0:20:42,120 --> 0:20:44,120
 Namely that a term can abstract over a type.

239
0:20:44,120 --> 0:20:47,120
 And a term can be applied to a type.

240
0:20:47,120 --> 0:20:50,120
 Here is an intuition.

241
0:20:50,120 --> 0:20:55,120
 Let's say that you have a program that takes as arguments two lists.

242
0:20:55,120 --> 0:20:57,120
 And appends them together.

243
0:20:57,120 --> 0:20:58,120
 But it only works.

244
0:20:58,120 --> 0:20:59,120
 So long as the argument takes two lists.

245
0:20:59,120 --> 0:21:05,120
 So long as the arguments, the elements of this list are of the same type.

246
0:21:05,120 --> 0:21:09,120
 So this is basically polymorphism.

247
0:21:09,120 --> 0:21:11,120
 Alright.

248
0:21:11,120 --> 0:21:16,120
 Something else we can do is that we can let types abstract over types.

249
0:21:16,120 --> 0:21:20,120
 And just copy the typing rules for terms for types.

250
0:21:20,120 --> 0:21:25,120
 And then introduce this simpler thing that types types.

251
0:21:25,120 --> 0:21:27,120
 Kinds.

252
0:21:27,120 --> 0:21:29,120
 And so now you have terms.

253
0:21:29,120 --> 0:21:30,120
 Terms of different types.

254
0:21:30,120 --> 0:21:32,120
 And types of different kinds.

255
0:21:32,120 --> 0:21:37,120
 And they still abstract over each other.

256
0:21:37,120 --> 0:21:39,120
 Finally.

257
0:21:39,120 --> 0:21:42,120
 You can let a type abstract over a term.

258
0:21:42,120 --> 0:21:43,120
 And.

259
0:21:43,120 --> 0:21:44,120
 Oh.

260
0:21:44,120 --> 0:21:47,120
 Let's just have an intuition about this one actually.

261
0:21:47,120 --> 0:21:49,120
 Applying a type to a type.

262
0:21:49,120 --> 0:21:52,120
 Let's say that you have a type maybe a.

263
0:21:52,120 --> 0:21:54,120
 And then you apply it to an integer.

264
0:21:54,120 --> 0:21:56,120
 It becomes maybe int.

265
0:21:56,120 --> 0:21:57,120
 Right.

266
0:21:57,120 --> 0:21:58,120
 So maybe.

267
0:21:59,120 --> 0:22:02,120
 Has kind arrow.

268
0:22:02,120 --> 0:22:06,120
 And maybe int has kind star.

269
0:22:06,120 --> 0:22:09,120
 Alright.

270
0:22:09,120 --> 0:22:11,120
 The intuition about this one.

271
0:22:11,120 --> 0:22:12,120
 It's.

272
0:22:12,120 --> 0:22:14,120
 You have an abstraction.

273
0:22:14,120 --> 0:22:16,120
 From a type over a term.

274
0:22:16,120 --> 0:22:18,120
 Which means that you can now apply.

275
0:22:18,120 --> 0:22:20,120
 A type to a term.

276
0:22:20,120 --> 0:22:22,120
 And for intuition.

277
0:22:22,120 --> 0:22:25,120
 You can apply.

278
0:22:25,120 --> 0:22:27,120
 A list to an integer.

279
0:22:27,120 --> 0:22:29,120
 And say that.

280
0:22:29,120 --> 0:22:31,120
 The type is the type of all integers.

281
0:22:31,120 --> 0:22:33,120
 Of length n.

282
0:22:33,120 --> 0:22:37,120
 For some variable n in your program.

283
0:22:37,120 --> 0:22:38,120
 And.

284
0:22:38,120 --> 0:22:40,120
 This is exactly how we are going to constrain.

285
0:22:40,120 --> 0:22:42,120
 Our rhythms.

286
0:22:42,120 --> 0:22:45,120
 Later.

287
0:22:45,120 --> 0:22:46,120
 Alright.

288
0:22:46,120 --> 0:22:49,120
 An overview over the language.

289
0:22:49,120 --> 0:22:51,120
 The primitives of the language are signals.

290
0:22:51,120 --> 0:22:55,120
 And.

291
0:22:55,120 --> 0:22:56,120
 For now.

292
0:22:56,120 --> 0:22:58,120
 Signals are names.

293
0:22:58,120 --> 0:22:59,120
 Of wave files.

294
0:22:59,120 --> 0:23:01,120
 In a folder.

295
0:23:01,120 --> 0:23:02,120
 Next to.

296
0:23:02,120 --> 0:23:04,120
 The program.

297
0:23:04,120 --> 0:23:07,120
 So the program that we just listened to.

298
0:23:07,120 --> 0:23:09,120
 It had a folder here called samples.

299
0:23:09,120 --> 0:23:11,120
 And.

300
0:23:11,120 --> 0:23:12,120
 The samples.

301
0:23:12,120 --> 0:23:18,120
 They sound like this.

302
0:23:18,120 --> 0:23:19,120
 Alright.

303
0:23:19,120 --> 0:23:20,120
 And.

304
0:23:20,120 --> 0:23:23,120
 The valid.

305
0:23:23,120 --> 0:23:25,120
 Signals to talk about.

306
0:23:25,120 --> 0:23:26,120
 Are.

307
0:23:26,120 --> 0:23:27,120
 The.

308
0:23:27,120 --> 0:23:28,120
 Names of.

309
0:23:28,120 --> 0:23:29,120
 Wave files.

310
0:23:29,120 --> 0:23:30,120
 The user definable parts.

311
0:23:30,120 --> 0:23:31,120
 Are patterns.

312
0:23:31,120 --> 0:23:32,120
 Namely.

313
0:23:32,120 --> 0:23:33,120
 The sequence that you put into.

314
0:23:33,120 --> 0:23:34,120
 A grid editor.

315
0:23:34,120 --> 0:23:35,120
 Rhythms.

316
0:23:35,120 --> 0:23:36,120
 Which relate.

317
0:23:36,120 --> 0:23:37,120
 Patterns.

318
0:23:37,120 --> 0:23:38,120
 To a grid.

319
0:23:38,120 --> 0:23:39,120
 And.

320
0:23:39,120 --> 0:23:40,120
 Grooves.

321
0:23:40,120 --> 0:23:41,120
 Which.

322
0:23:41,120 --> 0:23:42,120
 Associates.

323
0:23:42,120 --> 0:23:43,120
 Rhythms.

324
0:23:43,120 --> 0:23:44,120
 With signals.

325
0:23:44,120 --> 0:23:45,120
 I'll make.

326
0:23:45,120 --> 0:23:46,120
 An informative.

327
0:23:46,120 --> 0:23:47,120
 Video.

328
0:23:47,120 --> 0:23:48,120
 About.

329
0:23:48,120 --> 0:23:49,120
 Rhythms.

330
0:23:49,120 --> 0:23:50,120
 And.

331
0:23:50,120 --> 0:23:51,120
 Signals.

332
0:23:51,120 --> 0:23:52,120
 And.

333
0:23:52,120 --> 0:23:53,120
 Rhythms.

334
0:23:53,120 --> 0:23:54,120
 And.

335
0:23:54,120 --> 0:23:55,120
 Make.

336
0:23:55,120 --> 0:23:56,120
 An informal.

337
0:23:56,120 --> 0:23:57,120
 Introduction.

338
0:23:57,120 --> 0:23:58,120
 Here.

339
0:23:58,120 --> 0:23:59,120
 Is a program.

340
0:23:59,120 --> 0:24:00,120
 The program.

341
0:24:00,120 --> 0:24:01,120
 Has.

342
0:24:01,120 --> 0:24:02,120
 A voice.

343
0:24:02,120 --> 0:24:03,120
 Voice.

344
0:24:03,120 --> 0:24:04,120
 Is a groove.

345
0:24:04,120 --> 0:24:05,120
 And.

346
0:24:05,120 --> 0:24:06,120
 It.

347
0:24:06,120 --> 0:24:07,120
 Associates.

348
0:24:07,120 --> 0:24:08,120
 The signal.

349
0:24:08,120 --> 0:24:09,120
 Hi hat.

350
0:24:09,120 --> 0:24:10,120
 To this pattern.

351
0:24:10,120 --> 0:24:11,120
 Here.

352
0:24:11,120 --> 0:24:12,120
 The pattern.

353
0:24:12,120 --> 0:24:13,120
 Has.

354
0:24:13,120 --> 0:24:14,120
 A subdivision.

355
0:24:14,120 --> 0:24:15,120
 Of.

356
0:24:15,120 --> 0:24:16,120
 The four.

357
0:24:16,120 --> 0:24:17,120
 First.

358
0:24:17,120 --> 0:24:18,120
 It divides.

359
0:24:18,120 --> 0:24:19,120
 Time.

360
0:24:19,120 --> 0:24:20,120
 Into four.

361
0:24:20,120 --> 0:24:21,120
 Then.

362
0:24:21,120 --> 0:24:22,120
 It divides.

363
0:24:22,120 --> 0:24:23,120
 Each.

364
0:24:23,120 --> 0:24:24,120
 Node.

365
0:24:24,120 --> 0:24:25,120
 And.

366
0:24:25,120 --> 0:24:26,120
 For.

367
0:24:26,120 --> 0:24:27,120
 The.

368
0:24:27,120 --> 0:24:28,120
 Ease.

369
0:24:28,120 --> 0:24:29,120
 Of.

370
0:24:29,120 --> 0:24:30,120
 Illustration.

371
0:24:30,120 --> 0:24:31,120
 I.

372
0:24:31,120 --> 0:24:32,120
 Have.

373
0:24:32,120 --> 0:24:33,120
 Made.

374
0:24:33,120 --> 0:24:34,120
 A.

375
0:24:34,120 --> 0:24:35,120
 Graphic.

376
0:24:35,120 --> 0:24:36,120
 That.

377
0:24:36,120 --> 0:24:37,120
 Shows.

378
0:24:37,120 --> 0:24:38,120
 Like.

379
0:24:38,120 --> 0:24:39,120
 Where.

380
0:24:39,120 --> 0:24:40,120
 The.

381
0:24:40,120 --> 0:24:41,120
 Events.

382
0:24:41,120 --> 0:24:42,120
 Happen.

383
0:24:42,120 --> 0:24:43,120
 The.

384
0:24:43,120 --> 0:24:44,120
 Transformation.

385
0:24:44,120 --> 0:24:45,120
 That.

386
0:24:45,120 --> 0:24:46,120
 We.

387
0:24:46,120 --> 0:24:47,120
 Performed.

388
0:24:47,120 --> 0:24:48,120
 In.

389
0:24:48,120 --> 0:24:49,120
 The.

390
0:24:49,120 --> 0:24:50,120
 Program.

391
0:24:50,120 --> 0:24:51,120
 Was.

392
0:24:51,120 --> 0:24:52,120
 The.

393
0:24:52,120 --> 0:24:53,120
 Form.

394
0:24:53,120 --> 0:24:54,120
 Of.

395
0:24:54,120 --> 0:24:55,120
 Eight.

396
0:24:55,120 --> 0:24:56,120
 Notes.

397
0:24:56,120 --> 0:24:57,120
 And.

398
0:24:57,120 --> 0:24:58,120
 For.

399
0:24:58,120 --> 0:24:59,120
 Each.

400
0:24:59,120 --> 0:25:00,120
 Pair.

401
0:25:00,120 --> 0:25:01,120
 We.

402
0:25:01,120 --> 0:25:02,120
 Related.

403
0:25:02,120 --> 0:25:03,120
 Them.

404
0:25:03,120 --> 0:25:04,120
 In.

405
0:25:04,120 --> 0:25:05,120
 Duration.

406
0:25:05,120 --> 0:25:06,120
 To.

407
0:25:06,120 --> 0:25:07,120
 Each.

408
0:25:07,120 --> 0:25:08,120
 Other.

409
0:25:08,120 --> 0:25:09,120
 Three.

410
0:25:09,120 --> 0:25:10,120
 Against.

411
0:25:10,120 --> 0:25:11,120
 Two.

412
0:25:11,120 --> 0:25:12,120
 And.

413
0:25:12,120 --> 0:25:13,120
 What.

414
0:25:13,120 --> 0:25:14,120
 Bottom.

415
0:25:14,120 --> 0:25:15,120
 Teach.

416
0:25:15,120 --> 0:25:16,120
 Did.

417
0:25:16,120 --> 0:25:17,120
 To.

418
0:25:17,120 --> 0:25:18,120
 Infer.

419
0:25:18,120 --> 0:25:19,120
 The.

420
0:25:19,120 --> 0:25:20,120
 New.

421
0:25:20,120 --> 0:25:21,120
 Type.

422
0:25:21,120 --> 0:25:22,120
 Was.

423
0:25:22,120 --> 0:25:23,120
 The.

424
0:25:23,120 --> 0:25:24,120
 Courses.

425
0:25:24,120 --> 0:25:25,120
 Grid.

426
0:25:25,120 --> 0:25:26,120
 That.

427
0:25:26,120 --> 0:25:27,120
 Could.

428
0:25:27,120 --> 0:25:28,120
 Hold.

429
0:25:28,120 --> 0:25:29,120
 The.

430
0:25:29,120 --> 0:25:30,120
 Rhythm.

431
0:25:30,120 --> 0:25:31,120
 One.

432
0:25:31,120 --> 0:25:32,120
 Final.

433
0:25:32,120 --> 0:25:33,120
 Operation.

434
0:25:33,120 --> 0:25:34,120
 That.

435
0:25:34,120 --> 0:25:35,120
 You.

436
0:25:35,120 --> 0:25:36,120
 Can.

437
0:25:36,120 --> 0:25:37,120
 Decide.

438
0:25:37,120 --> 0:25:38,120
 To.

439
0:25:38,120 --> 0:25:39,120
 Do.

440
0:25:39,120 --> 0:25:40,120
 Is.

441
0:25:40,120 --> 0:25:41,120
 The.

442
0:25:41,120 --> 0:25:42,120
 One.

443
0:25:42,120 --> 0:25:43,120
 That.

444
0:25:43,120 --> 0:25:44,120
 I.

445
0:25:44,120 --> 0:25:45,120
 Have.

446
0:25:45,120 --> 0:25:46,120
 Denoted.

447
0:25:46,120 --> 0:25:47,120
 Here.

448
0:25:47,120 --> 0:25:48,120
 Which.

449
0:25:48,120 --> 0:25:49,120
 Moves.

450
0:25:49,120 --> 0:25:50,120
 A.

451
0:25:50,120 --> 0:25:51,120
 Rhythm.

452
0:25:51,120 --> 0:25:52,120
 To.

453
0:25:52,120 --> 0:25:53,120
 A.

454
0:25:53,120 --> 0:25:54,120
 Program.

455
0:25:54,120 --> 0:25:55,120
 Here.

456
0:25:55,120 --> 0:25:56,120
 Is.

457
0:25:56,120 --> 0:25:57,120
 A.

458
0:25:57,120 --> 0:26:01,120
 Program.

459
0:26:01,120 --> 0:26:02,120
 As.

460
0:26:02,120 --> 0:26:03,120
 You.

461
0:26:03,120 --> 0:26:04,120
 Can.

462
0:26:04,120 --> 0:26:05,120
 See.

463
0:26:05,120 --> 0:26:06,120
 From.

464
0:26:06,120 --> 0:26:07,120
 The.

465
0:26:07,120 --> 0:26:08,120
 Common.

466
0:26:08,120 --> 0:26:09,120
 Here.

467
0:26:09,120 --> 0:26:10,120
 It's.

468
0:26:10,120 --> 0:26:11,120
 A.

469
0:26:11,120 --> 0:26:12,120
 White.

470
0:26:12,120 --> 0:26:13,120
 Man's.

471
0:26:13,120 --> 0:26:14,120
 Hip-Hop.

472
0:26:14,120 --> 0:26:15,120
 Program.

473
0:26:15,120 --> 0:26:16,120
 And.

474
0:26:16,120 --> 0:26:17,120
 Let's.

475
0:26:17,120 --> 0:26:18,120
 Just.

476
0:26:18,120 --> 0:26:19,120
 Play.

477
0:26:19,120 --> 0:26:20,120
 It.

478
0:26:20,120 --> 0:26:21,120
 Like.

479
0:26:21,120 --> 0:26:22,120
 A.

480
0:26:22,120 --> 0:26:23,120
 Beat.

481
0:26:23,120 --> 0:26:24,120
 Has.

482
0:26:24,120 --> 0:26:25,120
 The.

483
0:26:25,120 --> 0:26:26,120
 Type.

484
0:26:26,120 --> 0:26:27,120
 Bottom.

485
0:26:27,120 --> 0:26:28,120
 Tish.

486
0:26:28,120 --> 0:26:29,120
 32.

487
0:26:29,120 --> 0:26:30,120
 16.

488
0:26:30,120 --> 0:26:31,120
 Because.

489
0:26:31,120 --> 0:26:32,120
 It's.

490
0:26:32,120 --> 0:26:33,120
 Duration.

491
0:26:33,120 --> 0:26:34,120
 Is.

492
0:26:34,120 --> 0:26:35,120
 32.

493
0:26:35,120 --> 0:26:36,120
 16th.

494
0:26:36,120 --> 0:26:37,120
 Note.

495
0:26:37,120 --> 0:26:38,120
 I'm.

496
0:26:38,120 --> 0:26:39,120
 A.

497
0:26:39,120 --> 0:26:40,120
 White.

498
0:26:40,120 --> 0:26:41,120
 Guy.

499
0:26:41,120 --> 0:26:42,120
 I.

500
0:26:42,120 --> 0:26:43,120
 Like.

501
0:26:43,120 --> 0:26:44,120
 Hip-Hop.

502
0:26:44,120 --> 0:26:45,120
 But.

503
0:26:45,120 --> 0:26:46,120
 This.

504
0:26:46,120 --> 0:26:47,120
 Hip-Hop.

505
0:26:47,120 --> 0:26:48,120
 Is.

506
0:26:48,120 --> 0:26:49,120
 A.

507
0:26:49,120 --> 0:26:50,120
 And.

508
0:26:50,120 --> 0:26:51,120
 Of.

509
0:26:51,120 --> 0:26:52,120
 Course.

510
0:26:52,120 --> 0:26:53,120
 When.

511
0:26:53,120 --> 0:26:54,120
 You.

512
0:26:54,120 --> 0:26:55,120
 Write.

513
0:26:55,120 --> 0:26:56,120
 A.

514
0:26:56,120 --> 0:26:57,120
 Hip-Hop.

515
0:26:57,120 --> 0:26:58,120
 Beat.

516
0:26:58,120 --> 0:26:59,120
 You.

517
0:26:59,120 --> 0:27:00,120
 Want.

518
0:27:00,120 --> 0:27:01,120
 To.

519
0:27:01,120 --> 0:27:02,120
 Make.

520
0:27:02,120 --> 0:27:03,120
 Something.

521
0:27:03,120 --> 0:27:04,120
 Keep.

522
0:27:04,120 --> 0:27:05,120
 Up.

523
0:27:05,120 --> 0:27:06,120
 All.

524
0:27:06,120 --> 0:27:07,120
 Right.

525
0:27:07,120 --> 0:27:08,120
 And.

526
0:27:08,120 --> 0:27:09,120
 So.

527
0:27:09,120 --> 0:27:10,120
 To.

528
0:27:10,120 --> 0:27:11,120
 Make.

529
0:27:11,120 --> 0:27:12,120
 Something.

530
0:27:12,120 --> 0:27:13,120
 Keep.

531
0:27:13,120 --> 0:27:14,120
 Up.

532
0:27:14,120 --> 0:27:15,120
 We.

533
0:27:15,120 --> 0:27:16,120
 Can.

534
0:27:16,120 --> 0:27:17,120
 Look.

535
0:27:17,120 --> 0:27:18,120
 At.

536
0:27:18,120 --> 0:27:19,120
 What.

537
0:27:19,120 --> 0:27:20,120
 We.

538
0:27:20,120 --> 0:27:21,120
 Have.

539
0:27:21,120 --> 0:27:22,120
 To.

540
0:27:22,120 --> 0:27:23,120
 Make.

541
0:27:23,120 --> 0:27:24,120
 Something.

542
0:27:24,120 --> 0:27:25,120
 It's.

543
0:27:25,120 --> 0:27:26,120
 A.

544
0:27:26,120 --> 0:27:27,120
 Samba.

545
0:27:27,120 --> 0:27:28,120
 The.

546
0:27:28,120 --> 0:27:29,120
 Roto.

547
0:27:29,120 --> 0:27:30,120
 Rhythm.

548
0:27:30,120 --> 0:27:31,120
 And.

549
0:27:31,120 --> 0:27:32,120
 Some.

550
0:27:32,120 --> 0:27:33,120
 Years.

551
0:27:33,120 --> 0:27:34,120
 Ago.

552
0:27:34,120 --> 0:27:35,120
 The.

553
0:27:35,120 --> 0:27:36,120
 Musicologist.

554
0:27:36,120 --> 0:27:37,120
 Fabian.

555
0:27:37,120 --> 0:27:38,120
 Guyon.

556
0:27:38,120 --> 0:27:39,120
 Looked.

557
0:27:39,120 --> 0:27:40,120
 At.

558
0:27:40,120 --> 0:27:41,120
 Some.

559
0:27:41,120 --> 0:27:42,120
 Of.

560
0:27:42,120 --> 0:27:43,120
 These.

561
0:27:43,120 --> 0:27:44,120
 Samba.

562
0:27:44,120 --> 0:27:45,120
 The.

563
0:27:45,120 --> 0:27:46,120
 Roto.

564
0:27:46,120 --> 0:27:47,120
 Rhythm.

565
0:27:47,120 --> 0:27:48,120
 And.

566
0:27:48,120 --> 0:27:49,120
 A.

567
0:27:49,120 --> 0:27:50,120
 Hip-Hop.

568
0:27:50,120 --> 0:27:51,120
 Hip-Hop.

569
0:27:51,120 --> 0:27:52,120
 So.

570
0:27:52,120 --> 0:27:53,120
 This.

571
0:27:53,120 --> 0:27:54,120
 Will.

572
0:27:54,120 --> 0:27:55,120
 Be.

573
0:27:55,120 --> 0:27:56,120
 A.

574
0:27:56,120 --> 0:27:57,120
 Kind.

575
0:27:57,120 --> 0:27:58,120
 Of.

576
0:27:58,120 --> 0:27:59,120
 A.

577
0:27:59,120 --> 0:28:00,120
 Roto.

578
0:28:00,120 --> 0:28:01,120
 A.

579
0:28:01,120 --> 0:28:02,120
 Roto.

580
0:28:02,120 --> 0:28:03,120
 A.

581
0:28:03,120 --> 0:28:04,120
 Roto.

582
0:28:04,120 --> 0:28:05,120
 Samba.

583
0:28:05,120 --> 0:28:06,120
 A.

584
0:28:06,120 --> 0:28:07,120
 Roto.

585
0:28:07,120 --> 0:28:08,120
 A.

586
0:28:08,120 --> 0:28:09,120
 A.

587
0:28:09,120 --> 0:28:10,120
 Roto.

588
0:28:10,120 --> 0:28:11,120
 A.

589
0:28:11,120 --> 0:28:12,120
 A.

590
0:28:12,120 --> 0:28:13,120
 A.

591
0:28:13,120 --> 0:28:14,120
 Roto.

592
0:28:14,120 --> 0:28:15,120
 A.

593
0:28:15,120 --> 0:28:16,120
 Roto.

594
0:28:16,120 --> 0:28:17,120
 A.

595
0:28:17,120 --> 0:28:21,120
 Right, but it doesn't swing so well.

596
0:28:21,120 --> 0:28:29,120
 Actually, the latter two are delayed a little bit.

597
0:28:29,120 --> 0:28:34,120
 And I want to put this into my hip-hop beat.

598
0:28:34,120 --> 0:28:37,120
 Let's try it out.

599
0:28:37,120 --> 0:28:39,120
 Alright.

600
0:28:39,120 --> 0:28:43,120
 To put the hip-hop beat a little bit behind,

601
0:28:43,120 --> 0:28:54,120
 we use the arrow to the left operator.

602
0:28:54,120 --> 0:28:56,120
 It looks like this.

603
0:28:56,120 --> 0:28:59,120
 And then we put it a little bit behind.

604
0:28:59,120 --> 0:29:04,120
 Let's say we put it 1 16th note behind.

605
0:29:04,120 --> 0:29:08,120
 1 64th note behind.

606
0:29:08,120 --> 0:29:09,120
 Alright.

607
0:29:09,120 --> 0:29:12,120
 And let's listen to it again.

608
0:29:13,120 --> 0:29:19,120
 Also, let's inspect the type of beat.

609
0:29:19,120 --> 0:29:24,120
 Uh oh, let's type check in Emacs again.

610
0:29:24,120 --> 0:29:30,120
 It has become 128 64th note,

611
0:29:30,120 --> 0:29:37,120
 because we need a finer grid to associate this latter 16th note with somewhere a little bit ahead.

612
0:29:43,120 --> 0:30:00,120
 I still think it sounds a little bit white.

613
0:30:00,120 --> 0:30:10,120
 Because the snare drum and the kick drum are still right on time,

614
0:30:10,120 --> 0:30:12,120
 let's leave a little bit of space around the pulse.

615
0:30:12,120 --> 0:30:15,120
 By putting the snare drum a little bit behind the pulse

616
0:30:15,120 --> 0:30:18,120
 and the kick drum a little bit ahead of the pulse.

617
0:30:18,120 --> 0:30:22,120
 We put the snare drum a little bit behind the pulse

618
0:30:22,120 --> 0:30:25,120
 by using the arrow to the right operator.

619
0:30:32,120 --> 0:30:35,120
 This one you will have already seen before.

620
0:30:42,120 --> 0:30:52,120
 It's type checking.

621
0:30:52,120 --> 0:31:02,120
 Let's inspect the type of beat.

622
0:31:02,120 --> 0:31:25,120
 It's a much finer grid.

623
0:31:25,120 --> 0:31:28,120
 Alright.

624
0:31:28,120 --> 0:31:31,120
 Actually, now it sounds much hipper.

625
0:31:31,120 --> 0:31:34,120
 The finer grid makes it much hipper.

626
0:31:34,120 --> 0:31:40,120
 Now it's a Brazilian man's hip-hop.

627
0:31:40,120 --> 0:31:43,120
 And I'll change the comment out here as well,

628
0:31:43,120 --> 0:31:50,120
 because I like it.

629
0:31:50,120 --> 0:31:52,120
 Alright.

630
0:31:52,120 --> 0:31:57,120
 There's a little bit of formalism to bottom teeth as well.

631
0:31:57,120 --> 0:31:59,120
 We'll go over that now.

632
0:31:59,120 --> 0:32:05,120
 So just to repeat.

633
0:32:05,120 --> 0:32:14,120
 The syntax is signals are well-formed variable names of signals.

634
0:32:14,120 --> 0:32:21,120
 Then you can have an accent which represents loudness.

635
0:32:21,120 --> 0:32:25,120
 And because we are programmers, we'll just represent it with a byte.

636
0:32:25,120 --> 0:32:27,120
 So it's a number from 0 to f.

637
0:32:27,120 --> 0:32:28,120
 And...

638
0:32:28,120 --> 0:32:31,120
 Then in the rest of the syntax,

639
0:32:31,120 --> 0:32:34,120
 I'm going to use these letters for natural numbers

640
0:32:34,120 --> 0:32:37,120
 and q's for rationals.

641
0:32:37,120 --> 0:32:44,120
 A groove is either a signature that demands a duration on our groove

642
0:32:44,120 --> 0:32:50,120
 and it gives a type error if the groove is either too long or too short.

643
0:32:50,120 --> 0:32:53,120
 So you can state that your groove is in 4-4.

644
0:32:53,120 --> 0:32:56,120
 I actually think we did already.

645
0:32:58,120 --> 0:33:00,120
 Ah yeah, here it was.

646
0:33:00,120 --> 0:33:01,120
 Alright.

647
0:33:01,120 --> 0:33:07,120
 So if I change the signature here...

648
0:33:07,120 --> 0:33:10,120
 I get a type error.

649
0:33:10,120 --> 0:33:13,120
 First it tried to refine the grid,

650
0:33:13,120 --> 0:33:16,120
 and it got to refine it to 320.

651
0:33:16,120 --> 0:33:20,120
 But then it realized that to be 3 quarter notes,

652
0:33:20,120 --> 0:33:26,120
 the rhythm should be 320 notes,

653
0:33:26,120 --> 0:33:32,120
 and 240 is not 320.

654
0:33:32,120 --> 0:33:39,120
 The compiler says.

655
0:33:39,120 --> 0:33:47,120
 I'll agree that we can extend bottom teeth to have better type errors

656
0:33:47,120 --> 0:33:51,120
 sometime in the future.

657
0:33:51,120 --> 0:33:53,120
 Alright.

658
0:33:53,120 --> 0:33:55,120
 A groove can also be a voice,

659
0:33:55,120 --> 0:33:59,120
 which associates a rhythm with a signal,

660
0:33:59,120 --> 0:34:02,120
 as we did with the hi-hat.

661
0:34:02,120 --> 0:34:05,120
 It can be a repetition of a groove,

662
0:34:05,120 --> 0:34:12,120
 it can be a groove played at the same time as another groove,

663
0:34:12,120 --> 0:34:18,120
 and it can be a groove played before another groove.

664
0:34:18,120 --> 0:34:24,120
 And a rhythm can be a subdivision followed by a pattern,

665
0:34:24,120 --> 0:34:29,120
 or it can be a phrasing of a subdivision followed by a pattern.

666
0:34:29,120 --> 0:34:32,120
 We did this with the shuffle transformation.

667
0:34:32,120 --> 0:34:36,120
 It can also be a rhythm which is a little bit ahead,

668
0:34:36,120 --> 0:34:39,120
 as we did with the Brazilian man's hip-hop.

669
0:34:39,120 --> 0:34:42,120
 It can be a rhythm which is a little bit behind,

670
0:34:42,120 --> 0:34:47,120
 and it can be a rhythm followed by another rhythm.

671
0:34:47,120 --> 0:34:51,120
 Finally, a pattern can be an accentuation,

672
0:34:51,120 --> 0:34:52,120
 and a nex,

673
0:34:52,120 --> 0:34:58,120
 which is the continuation of a previous event.

674
0:34:58,120 --> 0:35:03,120
 The reason for the nex is that when we refine the grid,

675
0:35:03,120 --> 0:35:09,120
 we want to enforce the duration of the previous rhythm,

676
0:35:09,120 --> 0:35:13,120
 and it can also be a rest or an abyss,

677
0:35:13,120 --> 0:35:16,120
 or it can be the empty pattern.

678
0:35:16,120 --> 0:35:21,120
 And the typing judgment that we used to infer

679
0:35:21,120 --> 0:35:27,120
 the causes of the grid comes following.

680
0:35:27,120 --> 0:35:30,120
 The typing judgment for patterns is that the empty pattern

681
0:35:30,120 --> 0:35:34,120
 is the pattern that contains no events.

682
0:35:34,120 --> 0:35:36,120
 If you add an event to a pattern,

683
0:35:36,120 --> 0:35:41,120
 you get a pattern that has one more event.

684
0:35:41,120 --> 0:35:45,120
 Alright, the typing judgment for rhythms.

685
0:35:45,120 --> 0:35:49,120
 A rhythm is parameterized with how many events

686
0:35:49,120 --> 0:35:55,120
 and how coarse the grid.

687
0:35:55,120 --> 0:35:59,120
 The Toplet rule states a subdivision and a pattern,

688
0:35:59,120 --> 0:36:04,120
 and the rhythm has as many events as the pattern,

689
0:36:04,120 --> 0:36:09,120
 but the subdivision is the product of the subdivisions.

690
0:36:09,120 --> 0:36:11,120
 Let's say we have eight notes,

691
0:36:11,120 --> 0:36:15,120
 which we wrote by separating time into four equally sized pieces,

692
0:36:15,120 --> 0:36:17,120
 and then separating each piece into two.

693
0:36:17,120 --> 0:36:20,120
 So, computed the product of four and two,

694
0:36:20,120 --> 0:36:23,120
 and got eight notes.

695
0:36:23,120 --> 0:36:28,120
 Likewise, I just got a note that we have ten minutes left,

696
0:36:28,120 --> 0:36:32,120
 so I'll go very quickly over this one.

697
0:36:32,120 --> 0:36:37,120
 The phrasing, of course, refines the grid enough

698
0:36:37,120 --> 0:36:41,120
 that you can separate the grid into chunks

699
0:36:41,120 --> 0:36:45,120
 that have the duration of the sum of whatever you separated.

700
0:36:45,120 --> 0:36:47,120
 For instance,

701
0:36:47,120 --> 0:36:49,120
 for the shuffle rhythm,

702
0:36:49,120 --> 0:36:51,120
 we wanted to separate our two eight notes

703
0:36:51,120 --> 0:36:54,120
 into five equally sized parts.

704
0:36:54,120 --> 0:36:58,120
 So we multiply the number of events happening

705
0:36:58,120 --> 0:37:02,120
 and the coarseness of the grid by five.

706
0:37:02,120 --> 0:37:06,120
 Moving rhythms ahead and behind

707
0:37:06,120 --> 0:37:08,120
 doesn't change their duration.

708
0:37:08,120 --> 0:37:12,120
 It just changes where they are realized in time,

709
0:37:12,120 --> 0:37:16,120
 and the duration of...

710
0:37:17,120 --> 0:37:19,120
 The sequence of two rhythms is, of course,

711
0:37:19,120 --> 0:37:22,120
 the sum of the events.

712
0:37:22,120 --> 0:37:25,120
 With this extra rule that refines the grid,

713
0:37:25,120 --> 0:37:28,120
 the grid is refined to the least common multiple

714
0:37:28,120 --> 0:37:32,120
 of the coarseness of the two grids.

715
0:37:32,120 --> 0:37:37,120
 There's also a typing judgment for grooves.

716
0:37:37,120 --> 0:37:40,120
 A signature is just a groove

717
0:37:40,120 --> 0:37:45,120
 which requires a coarseness of the grid

718
0:37:45,120 --> 0:37:49,120
 and a number of events.

719
0:37:49,120 --> 0:37:53,120
 A voice just has the same duration

720
0:37:53,120 --> 0:37:56,120
 as the rhythm that it's associated with,

721
0:37:56,120 --> 0:38:00,120
 and repeating a groove

722
0:38:00,120 --> 0:38:04,120
 just multiplies the number of events by how far.

723
0:38:04,120 --> 0:38:06,120
 All right?

724
0:38:06,120 --> 0:38:09,120
 And, well,

725
0:38:09,120 --> 0:38:13,120
 the sequence and simultaneous operators

726
0:38:13,120 --> 0:38:17,120
 have typing rules very similar to those of rhythms.

727
0:38:17,120 --> 0:38:21,120
 But you can ask me questions afterwards.

728
0:38:21,120 --> 0:38:23,120
 All right?

729
0:38:23,120 --> 0:38:26,120
 Now we'll have a demonstration running.

730
0:38:26,120 --> 0:38:32,120
 And here I typed in some world music.

731
0:38:32,120 --> 0:38:35,120
 There's a Gnarwen rhythm from Morocco,

732
0:38:35,120 --> 0:38:38,120
 an African Tsongkhlebe rhythm,

733
0:38:38,120 --> 0:38:39,120
 a pulsating...

734
0:38:39,120 --> 0:38:42,120
 It's like a reggae...

735
0:38:42,120 --> 0:38:45,120
 bass drum pulse,

736
0:38:45,120 --> 0:38:48,120
 a hip-hop shuffle hi-hat,

737
0:38:48,120 --> 0:38:51,120
 and a backbeat which makes everything sound

738
0:38:51,120 --> 0:38:57,120
 a little bit more pop.

739
0:38:57,120 --> 0:39:04,120
 And while it's playing,

740
0:39:04,120 --> 0:39:08,120
 I'll take questions.

741
0:39:08,120 --> 0:39:11,120
 Here.

742
0:39:11,120 --> 0:39:13,120
 All right, it's playing in a while

743
0:39:13,120 --> 0:39:15,120
 because it just has to type check.

744
0:39:15,120 --> 0:39:19,120
 We will not inspect the type of this rhythm.

745
0:39:22,120 --> 0:39:25,120
 All right.

746
0:39:25,120 --> 0:39:27,120
 Coming up.

747
0:39:36,120 --> 0:39:37,120
 All right, yeah.

748
0:39:37,120 --> 0:39:39,120
 So here is the Gnarwen...

749
0:39:39,120 --> 0:39:42,120
 Shaker pattern.

750
0:40:09,120 --> 0:40:10,120
 All right.

751
0:40:10,120 --> 0:40:11,120
 And while that's playing,

752
0:40:11,120 --> 0:40:12,120
 I think it will be playing for three or five minutes.

753
0:40:12,120 --> 0:40:13,120
 I'll take questions if there are any.

754
0:40:13,120 --> 0:40:14,120
 Yeah.

755
0:40:14,120 --> 0:40:15,120
 Yeah.

756
0:40:15,120 --> 0:40:16,120
 Any questions?

757
0:40:16,120 --> 0:40:17,120
 No.

758
0:40:17,120 --> 0:40:18,120
 No.

759
0:40:18,120 --> 0:40:19,120
 No.

760
0:40:19,120 --> 0:40:20,120
 No.

761
0:40:20,120 --> 0:40:21,120
 No.

762
0:40:21,120 --> 0:40:22,120
 No.

763
0:40:22,120 --> 0:40:23,120
 No.

764
0:40:23,120 --> 0:40:24,120
 No.

765
0:40:24,120 --> 0:40:25,120
 No.

766
0:40:25,120 --> 0:40:26,120
 No.

767
0:40:26,120 --> 0:40:27,120
 No.

768
0:40:27,120 --> 0:40:28,120
 No.

769
0:40:28,120 --> 0:40:29,120
 No.

770
0:40:29,120 --> 0:40:30,120
 No.

771
0:40:30,120 --> 0:40:31,120
 No.

772
0:40:31,120 --> 0:40:32,120
 No.

773
0:40:32,120 --> 0:40:33,120
 No.

774
0:40:33,120 --> 0:40:34,120
 No.

775
0:40:34,120 --> 0:40:35,120
 No.

776
0:40:35,120 --> 0:40:36,120
 No.

777
0:40:36,120 --> 0:40:37,120
 No.

778
0:40:37,120 --> 0:40:40,120
 No.

779
0:40:40,120 --> 0:40:43,120
 No.

780
0:40:43,120 --> 0:40:44,120
 No.

781
0:40:44,120 --> 0:40:45,120
 No.

782
0:40:45,120 --> 0:40:47,120
 So you have the signature statement for grooves.

783
0:40:47,120 --> 0:40:49,120
 Couldn't you also express that by simply stating

784
0:40:49,120 --> 0:40:51,120
 the type of the term that you have,

785
0:40:51,120 --> 0:40:54,120
 like you would normally do in Akda,

786
0:40:54,120 --> 0:40:58,120
 instead of having it as part of your language?

787
0:40:58,120 --> 0:41:01,120
 The type of signature?

788
0:41:01,120 --> 0:41:05,120
 So the signature term itself,

789
0:41:05,120 --> 0:41:10,880
 only it looks like it's only sort of enforcing the type yes yeah but why doesn't you can you

790
0:41:10,880 --> 0:41:17,440
 just say for example that beat has the type groove four four and then the normal actor

791
0:41:17,440 --> 0:41:23,120
 type checker would sort of enforce it right that's a good question you cannot so

792
0:41:24,880 --> 0:41:32,560
 but i'll explain why all right so it's because when you state the signature you state

793
0:41:32,560 --> 0:41:35,120
 that it can fit into four quarter notes

794
0:41:37,520 --> 0:41:42,720
 which will hold even though you state a rhythm which cannot be contained in a four grid

795
0:41:45,360 --> 0:41:51,680
 so 128 or 128 rhythm will still fit into the type signature of 4-4

796
0:41:53,680 --> 0:41:58,640
 but if you put 4-4 in the type signature you will get an error that 4 is not 128.

797
0:42:02,080 --> 0:42:02,480
 anyone

798
0:42:02,560 --> 0:42:02,800
 else

799
0:42:06,400 --> 0:42:22,880
 no then i think we should give Joachim a big hand for this excellent presentation